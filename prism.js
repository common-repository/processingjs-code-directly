/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 * MIT license http://www.opensource.org/licenses/mit-license.php/
 * @author Lea Verou http://lea.verou.me
 */(function(){var e=/\blang(?:uage)?-(?!\*)(\w+)\b/i,t=self.Prism={util:{type:function(e){return Object.prototype.toString.call(e).match(/\[object (\w+)\]/)[1]},clone:function(e){var n=t.util.type(e);switch(n){case"Object":var r={};for(var i in e)e.hasOwnProperty(i)&&(r[i]=t.util.clone(e[i]));return r;case"Array":return e.slice()}return e}},languages:{extend:function(e,n){var r=t.util.clone(t.languages[e]);for(var i in n)r[i]=n[i];return r},insertBefore:function(e,n,r,i){i=i||t.languages;var s=i[e],o={};for(var u in s)if(s.hasOwnProperty(u)){if(u==n)for(var a in r)r.hasOwnProperty(a)&&(o[a]=r[a]);o[u]=s[u]}return i[e]=o},DFS:function(e,n){for(var r in e){n.call(e,r,e[r]);t.util.type(e)==="Object"&&t.languages.DFS(e[r],n)}}},highlightAll:function(e,n){var r=document.querySelectorAll('code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code');for(var i=0,s;s=r[i++];)t.highlightElement(s,e===!0,n)},highlightElement:function(r,i,s){var o,u,a=r;while(a&&!e.test(a.className))a=a.parentNode;if(a){o=(a.className.match(e)||[,""])[1];u=t.languages[o]}if(!u)return;r.className=r.className.replace(e,"").replace(/\s+/g," ")+" language-"+o;a=r.parentNode;/pre/i.test(a.nodeName)&&(a.className=a.className.replace(e,"").replace(/\s+/g," ")+" language-"+o);var f=r.textContent;if(!f)return;f=f.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/\u00a0/g," ");var l={element:r,language:o,grammar:u,code:f};t.hooks.run("before-highlight",l);if(i&&self.Worker){var c=new Worker(t.filename);c.onmessage=function(e){l.highlightedCode=n.stringify(JSON.parse(e.data),o);t.hooks.run("before-insert",l);l.element.innerHTML=l.highlightedCode;s&&s.call(l.element);t.hooks.run("after-highlight",l)};c.postMessage(JSON.stringify({language:l.language,code:l.code}))}else{l.highlightedCode=t.highlight(l.code,l.grammar,l.language);t.hooks.run("before-insert",l);l.element.innerHTML=l.highlightedCode;s&&s.call(r);t.hooks.run("after-highlight",l)}},highlight:function(e,r,i){return n.stringify(t.tokenize(e,r),i)},tokenize:function(e,n,r){var i=t.Token,s=[e],o=n.rest;if(o){for(var u in o)n[u]=o[u];delete n.rest}e:for(var u in n){if(!n.hasOwnProperty(u)||!n[u])continue;var a=n[u],f=a.inside,l=!!a.lookbehind,c=0;a=a.pattern||a;for(var h=0;h<s.length;h++){var p=s[h];if(s.length>e.length)break e;if(p instanceof i)continue;a.lastIndex=0;var d=a.exec(p);if(d){l&&(c=d[1].length);var v=d.index-1+c,d=d[0].slice(c),m=d.length,g=v+m,y=p.slice(0,v+1),b=p.slice(g+1),w=[h,1];y&&w.push(y);var E=new i(u,f?t.tokenize(d,f):d);w.push(E);b&&w.push(b);Array.prototype.splice.apply(s,w)}}}return s},hooks:{all:{},add:function(e,n){var r=t.hooks.all;r[e]=r[e]||[];r[e].push(n)},run:function(e,n){var r=t.hooks.all[e];if(!r||!r.length)return;for(var i=0,s;s=r[i++];)s(n)}}},n=t.Token=function(e,t){this.type=e;this.content=t};n.stringify=function(e,r,i){if(typeof e=="string")return e;if(Object.prototype.toString.call(e)=="[object Array]")return e.map(function(t){return n.stringify(t,r,e)}).join("");var s={type:e.type,content:n.stringify(e.content,r,i),tag:"span",classes:["token",e.type],attributes:{},language:r,parent:i};s.type=="comment"&&(s.attributes.spellcheck="true");t.hooks.run("wrap",s);var o="";for(var u in s.attributes)o+=u+'="'+(s.attributes[u]||"")+'"';return"<"+s.tag+' class="'+s.classes.join(" ")+'" '+o+">"+s.content+"</"+s.tag+">"};if(!self.document){self.addEventListener("message",function(e){var n=JSON.parse(e.data),r=n.language,i=n.code;self.postMessage(JSON.stringify(t.tokenize(i,t.languages[r])));self.close()},!1);return}var r=document.getElementsByTagName("script");r=r[r.length-1];if(r){t.filename=r.src;document.addEventListener&&!r.hasAttribute("data-manual")&&document.addEventListener("DOMContentLoaded",t.highlightAll)}})();
 
 
Prism.languages.processingjs={
  comment:{
    pattern:/(^|[^\\])(\/\*[\w\W]*?\*\/|(^|[^:])\/\/.*?(\r?\n|$))/g,
    lookbehind:!0},
    string:/("|')(\\?.)*?\1/g,
    "class-name":{
    pattern:/((?:(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[a-z0-9_\.\\]+/ig,
    lookbehind:!0,
    inside:{punctuation:/(\.|\\)/}
    },
  keyword1:/\b(abs|abstract|acos|add|alpha|ambient|ambientLight|angleBetween|append|applyMatrix|arc|array|arraycopy|ArrayList|asin|assert|atan|atan2|background|beginCamera|beginDraw|beginRaw|beginRecord|beginShape|bezier|bezierDetail|bezierPoint|bezierTangent|bezierVertex|binary|blend|blendColor|blue|boolean|box|break|brightness|byte|cache|camera|case|catch|ceil|char|Character|charAt|class|close|color|colorMode|concat|constrain|continue|copy|cos|createFont|createGraphics|createImage|createInput|createOutput|createReader|createWriter|cross|cursor|curve|curveDetail|curvePoint|curveTangent|curveTightness|curveVertex|day|default|degrees|delay|directionalLight|disableStyle|dist|div|do|dot|double|ellipse|ellipseMode|else|emissive|enableStyle|endCamera|endDraw|endRaw|endRecord|endShape|enum|equals|exit|exp|expand|extends|false|fill|filter|final|finally|float|floor|flush|for|frameRate|frustum|get|getChild|getChildCount|getChildren|getContent|getFloatAttribute|getHeight|getIntAttribute|getName|getStringAttribute|getWidth|green|HashMap|hex|hint|hour|hue|if|image|imageMode|implements|import|indexOf|instanceof|int|Integer|interface|isVisible|join|keyPressed|keyReleased|keyTyped|length|lerp|lerpColor|lightFalloff|lights|lightSpecular|limit|line|link|list|loadBytes|loadFont|loadImage|loadPixels|loadShape|loadStrings|log|long|loop|mag|map|mask|match|matchAll|max|millis|min|minute|modelX|modelY|modelZ|month|mouseClicked|mouseDragged|mouseMoved|mousePressed|mouseReleased|mult|native|new|nf|nfc|nfp|nfs|noCursor|noFill|noise|noiseDetail|noiseSeed|noLights|noLoop|norm|normal|normalize|noSmooth|noStroke|noTint|null|Object|open|openStream|ortho|package|param|perspective|PFont|PGraphics|PImage|point|popMatrix|pow|print|printCamera|println|printMatrix|printProjection|PrintWriter|private|protected|PShape|public|pushMatrix|PVector|quad|radians|random|randomSeed|rect|rectMode|red|redraw|requestImage|resetMatrix|resize|return|reverse|rotate|rotateX|rotateY|rotateZ|round|saturation|save|saveBytes|saveFrame|saveStream|saveStrings|scale|screenX|screenY|screenZ|second|selectFolder|selectInput|selectOutput|set|setVisible|shape|shapeMode|shininess|short|shorten|sin|size|smooth|sort|specular|sphere|sphereDetail|splice|split|splitTokens|spotLight|sq|sqrt|static|status|str|strictfp|String|StringBuffer|stroke|strokeCap|strokeJoin|strokeWeight|sub|subset|substring|super|switch|synchronized|tan|text|textAlign|textAscent|textDescent|textFont|textLeading|textMode|textSize|texture|textureMode|textWidth|this|Thread|throw|throws|tint|toLowerCase|toUpperCase|transient|translate|triangle|trim|true|try|unbinary|unhex|updatePixels|vertex|void|volatile|while|XMLElement|year)\b/g,
  keyword2:/\b(draw|popStyle|pushStyle|setup)\b/g,
  keyword3:/\b(ADD|ALIGN_CENTER|ALIGN_LEFT|ALIGN_RIGHT|ALPHA|ALPHA_MASK|ALT|AMBIENT|ARGB|ARROW|BACKSPACE|BASELINE|BEVEL|BLEND|BLUE_MASK|BLUR|BOTTOM|BURN|CENTER|CHATTER|CLOSE|CMYK|CODED|COMPLAINT|COMPONENT|COMPOSITE|CONCAVE_POLYGON|CONTROL|CONVEX_POLYGON|CORNER|CORNERS|CROSS|CUSTOM|DARKEST|DEG_TO_RAD|DEGREES|DELETE|DIAMETER|DIFFERENCE|DIFFUSE|DILATE|DIRECTIONAL|DISABLE_ACCURATE_TEXTURES|DISABLE_DEPTH_SORT|DISABLE_NATIVE_FONTS|DISABLE_OPENGL_2X_SMOOTH|DISABLE_OPENGL_ERROR_REPORT|DISABLE_TEXT_SMOOTH|DISABLED|DODGE|DOWN|DXF|ENABLE_ACCURATE_TEXTURES|ENABLE_DEPTH_SORT|ENABLE_NATIVE_FONTS|ENABLE_OPENGL_4X_SMOOTH|ENABLE_OPENGL_ERROR_REPORT|ENTER|EPSILON|ERODE|ESC|EXCLUSION|focused|frameCount|frameRate|GIF|GRAY|GREEN_MASK|GROUP|HALF|HALF_PI|HAND|HARD_LIGHT|height|HINT_COUNT|HSB|IMAGE|INVERT|JAVA2D|JPEG|key|keyCode|keyPressed|LEFT|LIGHTEST|LINES|LINUX|MACOSX|MAX_FLOAT|MAX_INT|MITER|MODEL|mouseButton|mousePressed|mouseX|mouseY|MOVE|MULTIPLY|NO_DEPTH_TEST|NORMAL|NTSC|ONE|online|OPAQUE|OPEN|OPENGL|ORTHOGRAPHIC|OVERLAY|P2D|P3D|PAL|PERSPECTIVE|PI|PIXEL_CENTER|pixels|pmouseX|pmouseY|POINT|POINTS|POSTERIZE|PROBLEM|PROJECT|QUAD_STRIP|QUADS|QUARTER_PI|RAD_TO_DEG|RADIANS|RADIUS|RED_MASK|REPLACE|RETURN|RGB|RIGHT|ROUND|screen|SECAM|SHIFT|SOFT_LIGHT|SPECULAR|SQUARE|SUBTRACT|SVIDEO|TAB|TARGA|TEXT|TFF|THIRD_PI|THRESHOLD|TIFF|TOP|TRIANGLE_FAN|TRIANGLE_STRIP|TRIANGLES|TUNER|TWO|TWO_PI|UP|WAIT|WHITESPACE|width)\b/g,
  "boolean":/\b(true|false)\b/g,
  "function":{
    pattern:/([a-z0-9_])+\(/ig,
    inside:{punctuation:/\(/}
    },
  number:/\b-?(0x[\dA-Fa-f]+|\d*\.?\d+([Ee]-?\d+)?)\b/g,
  operator:/[-+]{1,2}|!|&lt;=?|>=?|={1,3}|(&amp;){1,2}|\|?\||\?|\*|\/|\~|\^|\%/g,
  ignore:/&(lt|gt|amp);/gi,
  punctuation:/[{}[\];(),.:]/g
  };

